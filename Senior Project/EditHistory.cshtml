@model EditInstanceViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @*<meta charset="utf-8" name="viewport" content="width=device-width" />*@
    <title>Edit History</title>
    <style>
        h1 {
            font-weight: 800;
            font-size: 35px;
            text-align: center
        }
        #myBtn {
            display: none;
            position: fixed;
            top: 120px;
            left: 30px;
            z-index: 99;
            font-size: 18px;
            border: none;
            outline: none;
            background-color: red;
            color: white;
            cursor: pointer;
            padding: 15px;
            border-radius: 4px;
        }

            #myBtn:hover {
                background-color: #555;
            }
    </style>
</head>

<body>
    <button onclick="topFunction()" id="myBtn" title="Go to top">Top</button>
    <div style="margin-bottom:10px">
        <a asp-controller="Survey" asp-action="CompleteDomain" asp-route-ProgId="@Model.Domains.First().ProgramId" class="btn btn-lg btn-primary">
            Back
        </a>
    </div>

    <h1 style="margin-bottom:10px">Edits</h1>

    @foreach (var domain in Model.Domains)
    {
        <table class="table table-bordered" id="EditsTable">
            <tr style="background-color: #d3d8d4; font-size: 20px; text-align: left">
                <td colspan="3"><strong>@domain.DomainName</strong></td>
            </tr>

            @foreach (var topic in Model.Topics.Where(x => x.DomainId == domain.DomainId).ToList())
            {
                int i = 1;
                <tr style="background-color: #d3d8d4; font-size: 16px; text-align: left">
                    <td colspan="3"><strong> @topic.TopicName</strong></td>
                </tr>

                @foreach (var question in Model.Questions.Where(y => y.TopicId == topic.TopicId).ToList())
                {

                    var responses = Model.Instances.Where(p => p.QuestionId == question.QuestionId).ToList();
                    var latestresponses = responses.Where(p => responses.Count(q => q.UserName == p.UserName) == 1
                                                           || (responses.Where(q => q.UserName == p.UserName && q.EditInstanceId != p.EditInstanceId)
                                                           .All(r => p.TimeOfEdit.CompareTo(r.TimeOfEdit) > 0) == true)).ToList();
                    bool conflictCheckA;
                    bool conflictCheckB;

                    @if (responses.Count() > 1 && latestresponses.Any(p => latestresponses.Any(q => q.UserName != p.UserName && ((p.Answer - q.Answer >= 2 && q.Answer > 0)
                                                                                           || (q.Answer - p.Answer >= 2 && p.Answer > 0)))))
                    {
                        conflictCheckA = true;
                    }
                    else
                    {
                        conflictCheckA = false;
                    }

                    @if (responses.Count() > 1 && latestresponses.Any(p => responses.Any(q => q.UserName != p.UserName && ((p.Answer == 0 && q.Answer > 0) || (q.Answer == 0 && p.Answer > 0)))))
                    {
                        conflictCheckB = true;
                    }
                    else
                    {
                        conflictCheckB = false;
                    }
                    <tr style="background-color: #d3d8d4; font-size: 16px; text-align: left">
                        <td colspan="3"> @question.QuestionPrompt</td>
                    </tr>


                    @foreach (var instance in responses.OrderByDescending(p => p.TimeOfEdit))
                    {
                        bool latestQuestionCount = latestresponses.FirstOrDefault(p => p.EditInstanceId == instance.EditInstanceId) != default;
                        if (instance.Answer == 0 && conflictCheckB == true && latestQuestionCount == true)
                        {
                            <tr class="classYellow table-warning" style="font-size: 16px; text-align: left">
                                <td>@instance.AnswerText</td>
                                <td>@instance.UpdatedBy</td>
                                <td>@instance.TimeOfEdit</td>
                            </tr>
                        }

                        else if (((instance.Answer > 0 && instance.Answer < 3) || (instance.Answer == 3 && latestresponses.Any(p => p.Answer == 5))) && conflictCheckA == true && latestQuestionCount == true)
                        {
                            <tr class="classRed table-danger" style="font-size: 16px; text-align: left">
                                <td>@instance.AnswerText</td>
                                <td>@instance.UpdatedBy</td>
                                <td>@instance.TimeOfEdit</td>
                            </tr>
                        }
                        else if ((instance.Answer > 3 || (instance.Answer == 3 && latestresponses.Any(p => p.Answer == 1))) && conflictCheckA == true && latestQuestionCount == true)
                        {
                            <tr class="classGreen table-success" style="font-size: 16px; text-align: left">
                                <td>@instance.AnswerText</td>
                                <td>@instance.UpdatedBy</td>
                                <td>@instance.TimeOfEdit</td>
                            </tr>
                        }
                        else
                        {
                            <tr class="classOther" style="font-size: 16px; text-align: left">
                                <td>@instance.AnswerText</td>
                                <td>@instance.UpdatedBy</td>
                                <td>@instance.TimeOfEdit</td>
                            </tr>
                        }
                    }
                    i++;
                }
            }

        </table>
    }

</body>
</html>

<script>
    $(document).ready(function () {
        $('#EditsTable').DataTable();
        $('.dataTables_length').addClass('bs-select');
    });
</script>
<script>
    //Get the button
    var mybutton = document.getElementById("myBtn");

    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            mybutton.style.display = "block";
        } else {
            mybutton.style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
</script>


<!--Note: Add message if user had no completed surveys-->
<!--Can be viewed by site users and program admins-->
